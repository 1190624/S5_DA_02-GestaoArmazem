// <auto-generated />
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    partial class DDDSample1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DDDSample1.Domain.Armazens.Armazem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("armazens");
                });

            modelBuilder.Entity("DDDSample1.Domain.Categories.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DDDSample1.Domain.Entregas.Entrega", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ArmazemId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ArmazemId");

                    b.ToTable("entrega");
                });

            modelBuilder.Entity("DDDSample1.Domain.Families.Family", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("DDDSample1.Domain.Products.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DDDSample1.Domain.Armazens.Armazem", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Armazens.Altitude", "Altitude", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<double>("altitude")
                                .HasColumnType("double");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.Coordenadas", "Coordenadas", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<double>("latitude")
                                .HasColumnType("double");

                            b1.Property<double>("longitude")
                                .HasColumnType("double");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.Designacao", "Designacao", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("texto")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("codigoPostal")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("localidade")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("nomeRua")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<short>("numeroPorta")
                                .HasColumnType("smallint");

                            b1.Property<string>("pais")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.Municipio", "Municipio", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("nome")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.Navigation("Altitude");

                    b.Navigation("Coordenadas");

                    b.Navigation("Designacao");

                    b.Navigation("Endereco");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("DDDSample1.Domain.Entregas.Entrega", b =>
                {
                    b.HasOne("DDDSample1.Domain.Armazens.Armazem", "armazem")
                        .WithMany("entregas")
                        .HasForeignKey("ArmazemId");

                    b.OwnsOne("DDDSample1.Domain.Entregas.DataEntrega", "DataEntrega", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("ano")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("dia")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("mes")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("EntregaId");

                            b1.ToTable("entrega");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Entregas.Massa", "Massa", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("varchar(255)");

                            b1.Property<double>("massa")
                                .HasColumnType("double");

                            b1.HasKey("EntregaId");

                            b1.ToTable("entrega");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Entregas.TempoColocacao", "TempoColocacao", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("varchar(255)");

                            b1.Property<double>("tempoColocacao")
                                .HasColumnType("double");

                            b1.HasKey("EntregaId");

                            b1.ToTable("entrega");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Entregas.TempoRetirada", "TempoRetirada", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("varchar(255)");

                            b1.Property<double>("tempoRetirada")
                                .HasColumnType("double");

                            b1.HasKey("EntregaId");

                            b1.ToTable("entrega");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.Navigation("DataEntrega");

                    b.Navigation("Massa");

                    b.Navigation("TempoColocacao");

                    b.Navigation("TempoRetirada");

                    b.Navigation("armazem");
                });

            modelBuilder.Entity("DDDSample1.Domain.Armazens.Armazem", b =>
                {
                    b.Navigation("entregas");
                });
#pragma warning restore 612, 618
        }
    }
}
